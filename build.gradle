buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'maven-publish'

version = '1.3'
def mcVersion = '1.17.1'
group = 'quarris.voidtanks' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'VoidTanks'

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.17.1'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'info'

            mods {
                voidtanks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'info'

            mods {
                voidtanks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'voidtanks', '--all', '--output', file('src/generated/resources/')

            mods {
                voidtanks {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url = "https://dvs1.progwml6.com/files/maven/" }
    maven { url = "https://repo.refinedmods.com/" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.17.1-37.0.8'
    //runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.1.65")
    //runtimeOnly fg.deobf("com.refinedmods:refinedpipes:0.5+5")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    archiveName = "${baseName}-${mcVersion}-${version}.${extension}"
    manifest {
        attributes([
                "Specification-Title"     : "voidtanks",
                "Specification-Vendor"    : "voidtankssareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "voidtankssareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


task sourcesJar(type: Jar) {
    from(sourceSets.main.allSource)
    archiveName = "${baseName}-${mcVersion}-${version}-sources.${extension}"
}

artifacts {
    archives sourcesJar
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
            println "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}